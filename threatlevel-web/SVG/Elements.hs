module SVG.Elements where

import X.Prelude
import XML
import XML.TH
import DOM.Core

data SVG
type Svg = Writer [XML SVG AttributeSet Both] ()

svg :: Svg -> Svg
svg c = let
  el = tag "svg" & contents .~ execWriter c
  in tell [el] ! Custom "xmlns" "http://www.w3.org/2000/svg"

concat <$> mapM (mk [t|Svg|] . view (from packed) . tlKebab2camel) [
  -- https://developer.mozilla.org/en-US/docs/Web/SVG/Element
    "a"
  , "altGlyph"
  , "altGlyphDef"
  , "altGlyphItem"
  , "animate"
  , "animateColor"
  , "animateMotion"
  , "animateTransform"
  , "audio"
  , "canvas"
  , "circle"
  , "clipPath"
  , "color-profile"
  , "cursor"
  , "defs"
  , "desc"
  , "discard"
  , "ellipse"
  , "feBlend"
  , "feColorMatrix"
  , "feComponentTransfer"
  , "feComposite"
  , "feConvolveMatrix"
  , "feDiffuseLighting"
  , "feDisplacementMap"
  , "feDistantLight"
  , "feDropShadow"
  , "feFlood"
  , "feFuncA"
  , "feFuncB"
  , "feFuncG"
  , "feFuncR"
  , "feGaussianBlur"
  , "feImage"
  , "feMerge"
  , "feMergeNode"
  , "feMorphology"
  , "feOffset"
  , "fePointLight"
  , "feSpecularLighting"
  , "feSpotLight"
  , "feTile"
  , "feTurbulence"
  , "filter"
  , "font"
  , "font-face"
  , "font-face-format"
  , "font-face-name"
  , "font-face-src"
  , "font-face-uri"
  , "foreignObject"
  , "g"
  , "glyph"
  , "glyphRef"
  , "hatch"
  , "hatchpath"
  , "hkern"
  , "iframe"
  , "image"
  , "line"
  , "linearGradient"
  , "marker"
  , "mask"
  , "mesh"
  , "meshgradient"
  , "meshpatch"
  , "meshrow"
  , "metadata"
  , "missing-glyph"
  , "mpath"
  , "path"
  , "pattern"
  , "polygon"
  , "polyline"
  , "radialGradient"
  , "rect"
  , "script"
  , "set"
  , "solidcolor"
  , "stop"
  , "style"
  -- , "svg"
  , "switch"
  , "symbol"
  , "text"
  , "textPath"
  , "title"
  , "tref"
  , "tspan"
  , "unknown"
  , "use"
  , "video"
  , "view"
  , "vkern"
  ]
